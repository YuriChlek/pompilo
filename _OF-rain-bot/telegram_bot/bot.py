from telegram import Bot
import asyncio
from datetime import datetime

TOKEN = "7962265207:AAHL2b0TC-Quj5u5Xz3-Bm2sSf-0qlcbAiQ"

bot = Bot(token=TOKEN)


async def send_pompilo_rain_order_message(symbol, price, take_profit, stop_loss, direction, signal):
    """
        –ù–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—É —Ç–æ—Ä–≥–æ–≤—É —É–≥–æ–¥—É –∑–∞ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—î—é RAIN —É Telegram-—á–∞—Ç.

        –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–∏–º–≤–æ–ª, —Ü—ñ–Ω—É –≤—Ö–æ–¥—É, —Ç–µ–π–∫-–ø—Ä–æ—Ñ—ñ—Ç, —Å—Ç–æ–ø-–ª–æ—Å—Å,
        –Ω–∞–ø—Ä—è–º–æ–∫ –ø–æ–∑–∏—Ü—ñ—ó, —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Å–∏–≥–Ω–∞–ª—É —Ç–∞ –æ–ø–∏—Å —Å–∏–≥–Ω–∞–ª—É.

        Args:
            symbol (str): –¢—ñ–∫–µ—Ä —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 'BTCUSDT').
            price (float): –¶—ñ–Ω–∞ –≤—Ö–æ–¥—É –≤ –ø–æ–∑–∏—Ü—ñ—é.
            take_profit (float): –¶—ñ–ª—å–æ–≤–∞ —Ü—ñ–Ω–∞ –≤–∏—Ö–æ–¥—É (—Ç–µ–π–∫-–ø—Ä–æ—Ñ—ñ—Ç).
            stop_loss (float): –†—ñ–≤–µ–Ω—å –∑–∞—Ö–∏—Å—Ç—É (—Å—Ç–æ–ø-–ª–æ—Å—Å).
            direction (str): –ù–∞–ø—Ä—è–º–æ–∫ –ø–æ–∑–∏—Ü—ñ—ó ('long' –∞–±–æ 'short').
            signal (str): –û–ø–∏—Å —Å–∏–≥–Ω–∞–ª—É, —â–æ —Å–ø—Ä–∞—Ü—é–≤–∞–≤ –¥–ª—è –≤—Ö–æ–¥—É –≤ –ø–æ–∑–∏—Ü—ñ—é.

        Raises:
            Exception: –Ø–∫—â–æ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram.
    """

    chat_id = "-4954272566"
    position = get_position_icon(str(direction).lower())
    time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    message = f"""
üöÄ NEW RAIN TRADE
<b>{position}: </b>

<b><i>{symbol}</i></b>
<b>Entry price:</b> {price}
<b>Take Profit:</b> {take_profit}
<b>Stop Loss:</b> {stop_loss}
<b>Time:</b> {time}
{signal}
    """

    try:
        await bot.send_message(chat_id=chat_id, text=message, parse_mode='HTML')
    except Exception as e:
        print(f"Telegram message error {e}")


def get_position_icon(direction: str) -> str:
    """
        –ü–æ–≤–µ—Ä—Ç–∞—î —ñ–∫–æ–Ω–∫—É —Ç–∞ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞–ø—Ä—è–º–∫—É –ø–æ–∑–∏—Ü—ñ—ó.

        Args:
            direction (str): –ù–∞–ø—Ä—è–º–æ–∫ —É–≥–æ–¥–∏. –û—á—ñ–∫—É—î—Ç—å—Å—è 'buy' –∞–±–æ 'sell' (–±–µ–∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —Ä–µ–≥—ñ—Å—Ç—Ä—É).

        Returns:
            str: –¢–µ–∫—Å—Ç —ñ–∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—é —ñ–∫–æ–Ω–∫–æ—é:
                - 'üü¢ üìà LONG' –¥–ª—è –Ω–∞–ø—Ä—è–º–∫—É 'buy'
                - 'üî¥ üìâ SHORT' –¥–ª—è –Ω–∞–ø—Ä—è–º–∫—É 'sell'
    """

    return 'üü¢ üìà LONG' if direction.lower() == 'buy' else 'üî¥ üìâ SHORT'


async def test_run():
    await send_pompilo_rain_order_message('SOLUSDT', 1999, 1900, 2222, 'Buy', 'Binance')


if __name__ == '__main__':
    asyncio.run(test_run())
